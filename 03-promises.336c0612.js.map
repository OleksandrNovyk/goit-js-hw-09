{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,SAASC,KAAKC,MAAMC,gBAAkB,UACtC,MAAMC,EAAOJ,SAASK,cAAc,SAC9BC,EAAU,CACdC,SAAU,gBACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,eAKrB,SAASC,EAAcN,EAAUO,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAET,E,MAAUO,IAEpBG,EAAO,C,SAAEV,E,MAAUO,GAAQ,GAE5BA,EAAM,G,CAXbV,EAAKkB,iBAAiB,UAetB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,cAAcC,SACpD,GAAIJ,EAAMK,MAAQ,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,EACtDC,EAAAjC,GAASkC,OAAOC,QAAQ,yCAEtB,IAAG,IAAIC,EAAI,EAAGA,EAAIP,EAAOG,MAAOI,IAAK,CACrC,IAAIC,EAAWD,EAAI,EACfE,EAAeC,OAAOZ,EAAMK,OAASO,OAAOX,EAAKI,OAASI,EAC9DI,QAAQC,IAAIH,GAEZvB,EAAcsB,EAAUC,GACrBI,MAAK,EAACjC,SAAEA,EAAQO,MAAEA,MACjBiB,EAAAjC,GAASkC,OAAOS,QACd,uBAAqBlC,QAAiBO,MAAWR,EAAE,IAGtDoC,OAAM,EAACnC,SAAEA,EAAQO,MAAEA,MAClBiB,EAAAjC,GAASkC,OAAOW,QACd,sBAAoBpC,QAAeO,MAAWR,EAAE,G,CAK1DiB,EAAMK,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.body.style.backgroundColor = '#eee0ae';\nconst form = document.querySelector('.form');\nconst options = {\n  position: 'center-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 8000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-bottom',\n};\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;          //delay=150,step=100,amount=6\n  if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n    Notiflix.Notify.warning(`❗ Please enter a positive number`);\n  } else {\n    for (let i = 0; i < amount.value; i++) {\n      let position = i + 1;\n      let promiseDelay = Number(delay.value) + Number(step.value) * i;   //150+100*0=150, 150+100*1= 250, 150+100*2=350, 150+100*3=450, 150+100*4=550, 150+100*5=650 \n      console.log(promiseDelay);\n\n      createPromise(position, promiseDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`, options\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`, options\n          );\n        });\n    }\n  }\n  event.currentTarget.reset();\n}\n\n"],"names":["$7Y9D8","parcelRequire","document","body","style","backgroundColor","$47d4ff9957288465$var$form","querySelector","$47d4ff9957288465$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","currentTarget","elements","value","$parcel$interopDefault","Notify","warning","i","position1","promiseDelay","Number","console","log","then","success","catch","failure","reset"],"version":3,"file":"03-promises.336c0612.js.map"}